name: Build MAUI iOS IPA

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  MD_APPLE_SDK_ROOT: /Applications/Xcode_16.3.app

jobs:
  build:
    runs-on: macos-15

    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4

    - name: Select Xcode 16.3
      run: |
        sudo xcode-select -s /Applications/Xcode_16.3.app
        xcodebuild -runFirstLaunch
        xcrun xcode-select --print-path
        xcodebuild -version

    - name: Listar versões do Xcode disponíveis
      run: |
        echo "Versões do Xcode disponíveis:"
        ls -la /Applications/Xcode*

    - name: Configurar .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Instalar workload MAUI
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restaurar pacotes NuGet
      run: dotnet restore *.sln

    - name: Verificar existência do certificado e perfil de provisionamento
      run: |
        CERT_PATH=$(find . -name "certificate.p12" | head -n 1)
        PROFILE_PATH=$(find . -name "Bicicreteiro_Prod.mobileprovision" | head -n 1)
        if [ -z "$CERT_PATH" ]; then
          echo "Erro: O arquivo certificate.p12 não foi encontrado."
          ls -la
          exit 1
        fi
        if [ -z "$PROFILE_PATH" ]; then
          echo "Erro: O arquivo Bicicreteiro_Prod.mobileprovision não foi encontrado."
          ls -la
          exit 1
        fi
        echo "Certificado e perfil de provisionamento encontrados com sucesso."

    - name: Instalar certificado
      run: |
        CERT_PATH=$(find . -name "certificate.p12" | head -n 1)
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security import "$CERT_PATH" -k build.keychain -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
        # Extrair o signing identity (nome do certificado)
        SIGNING_IDENTITY=$(security find-identity -p codesigning build.keychain | grep "iPhone" | head -n 1 | awk '{print $2}')
        echo "SIGNING_IDENTITY=$SIGNING_IDENTITY" >> $GITHUB_ENV

    - name: Instalar perfil de provisionamento
      run: |
        PROFILE_PATH=$(find . -name "Bicicreteiro_Prod.mobileprovision" | head -n 1)
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp "$PROFILE_PATH" ~/Library/MobileDevice/Provisioning\ Profiles/
        # Extrair o nome do provision profile
        PROVISION_PROFILE_NAME=$(basename "$PROFILE_PATH" .mobileprovision)
        echo "PROVISION_PROFILE_NAME=$PROVISION_PROFILE_NAME" >> $GITHUB_ENV

    - name: Publish IPA para iOS
      run: |
        dotnet publish -f net9.0-ios -c Release /p:ArchiveOnBuild=true /p:RuntimeIdentifier=ios-arm64 \
          /p:ApplicationId=app.bicicreteiro \
          /p:ProvisioningType=manual \
          /p:CodesignKey="${{ env.SIGNING_IDENTITY }}" \
          /p:CodesignProvision="${{ env.PROVISION_PROFILE_NAME }}"

    - name: Encontrar IPA gerado
      id: find_ipa
      run: |
        IPA_PATH=$(find bin/Release/net9.0-ios/ios-arm64/publish -type f -name "*.ipa" | head -n 1)
        if [ -z "$IPA_PATH" ]; then
          echo "ERRO: Nenhum arquivo IPA encontrado!"
          ls -la bin/Release/net9.0-ios/ios-arm64/publish/
          exit 1
        fi
        echo "IPA_PATH=$IPA_PATH" >> $GITHUB_ENV
        echo "IPA encontrado: $IPA_PATH"

    - name: Fazer upload do IPA como artefato
      uses: actions/upload-artifact@v4
      with:
        name: maui-ios-ipa
        path: ${{ env.IPA_PATH }}
        retention-days: 30